/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package m.s;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author ASUS
 */
public class TimeTable extends javax.swing.JFrame {
    Queue system;
    boolean isForInterArrival;
    public TimeTable() {
        initComponents();
    }
    public TimeTable(Queue queue, int tableSize, boolean isServiceTable){
        isForInterArrival = isServiceTable;
        initComponents();
        system = queue;
        tableType.setText((!isServiceTable? "Service":"Inter-Arrival" )+ " table");
        DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
        int [] row =(isServiceTable? system.serviceTime :system.interArrival);
        for(int i = 0; i < tableSize; ++i){
            tableModel.addRow(new Object[] {0,0.0});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        submitTable = new javax.swing.JButton();
        returnToMain = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        tableType = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        submitTable.setText("Submit");
        submitTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitTableActionPerformed(evt);
            }
        });

        returnToMain.setText("Return");
        returnToMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnToMainActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time", "P(Time)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
        }

        tableType.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tableType.setText("loren ipsum");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(submitTable)
                        .addGap(58, 58, 58)
                        .addComponent(returnToMain))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(tableType, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitTable)
                    .addComponent(returnToMain))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitTableActionPerformed
            DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
            try{
            int tableSize=  tableModel.getRowCount();
            int []interval = new int[tableSize];
            double [] probabilities = new double[tableSize];
            boolean notSameSize=false;
            int previousSize= 0;
            for(int i = 0; i < tableSize; ++i){ 
                double temp = (double)tableModel.getValueAt(i, 1);
                interval[i] = (int)tableModel.getValueAt(i, 0);
                probabilities[i] = (double)tableModel.getValueAt(i, 1);
                String []valueSizes = Double.toString(temp).split("\\.");
                if(i>0){
                    if(valueSizes[1].length() != previousSize){
                              JOptionPane.showMessageDialog(this, "Error", "Probabilities should be of same digit length", JOptionPane.ERROR_MESSAGE);
                              notSameSize= true;
                              break;
                    }
                }
                previousSize = valueSizes[1].length();
                
            }
            if(notSameSize && !system.checkCumulative(probabilities, previousSize)){    
                 JOptionPane.showMessageDialog(this, "Error", "Total sum is not 1", JOptionPane.ERROR_MESSAGE);
           }
            else{
                if(isForInterArrival)
                    system.interArrival = interval;
                else
                    system.serviceTime = interval;
                JOptionPane.showMessageDialog(this, ":D", "Success", JOptionPane.ERROR_MESSAGE);
                GUI gui = new GUI(system, interval, probabilities);
            }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(this, "Error", "Invalid value", JOptionPane.ERROR_MESSAGE);
            }
      
    }//GEN-LAST:event_submitTableActionPerformed

    private void returnToMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnToMainActionPerformed
      GUI gui = new GUI();
      gui.setVisible(true);
      this.dispose();
    }//GEN-LAST:event_returnToMainActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton returnToMain;
    private javax.swing.JButton submitTable;
    private javax.swing.JTable table;
    private javax.swing.JLabel tableType;
    // End of variables declaration//GEN-END:variables
}
